[
  {
    "bindings": {
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown",
      "alt-shift-f": "editor::Format",
      "alt-left": "pane::GoBack",
      "alt-right": "pane::GoForward",
      "ctrl-shift-i": "assistant::ToggleFocus",
      "alt-{": "editor::Fold",
      "alt-}": "editor::UnfoldLines",
      "shift-f12": "editor::FindAllReferences",
      "alt-shift-f12": "editor::GoToDefinition"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "tab": "editor::Indent",
      "shift->": "editor::Indent",
      "shift-tab": "editor::Outdent",
      "shift-<": "editor::Outdent"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      // Window movement bindings
      // Ctrl jklk to move between panes
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",

      // Close project panel as project file panel on the right
      "q": "workspace::ToggleRightDock",

      // Navigate between panel
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-; right": "pane::SplitRight",
      "ctrl-; down": "pane::SplitDown",
      "ctrl-; up": "pane::SplitUp",
      "ctrl-; left": "pane::SplitLeft"
    }
  }
]
